# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
export PATH=$HOME/bin:/usr/local/bin:$PATH
export PATH="/opt/homebrew/opt/go@1.21/bin:$PATH"
export PATH=$PATH:$HOME/.maestro/bin
export PATH=$HOME/.local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh
ZSH_THEME="powerlevel10k/powerlevel10k"
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' frequency 13

plugins=(
  git
  fzf-tab
  zsh-syntax-highlighting
  zsh-autosuggestions
  vi-mode
  timewarrior
  evalcache
)

source $ZSH/oh-my-zsh.sh

# Preferred editor for local and remote sessions
 if [[ -n $SSH_CONNECTION ]]; then
   export EDITOR='nvim'
 else
   export EDITOR='nvim'
 fi

[ -f ~/.alias ] && source ~/.alias

# Increase History Size
HISTFILE=~/.zsh_history
HISTSIZE=999999999
SAVEHIST=$HISTSIZE

# Fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Homebrew
_evalcache /opt/homebrew/bin/brew shellenv
# eval "$(/opt/homebrew/bin/brew shellenv)"

export GPG_TTY=$(tty)

source $HOME/.cargo/env
# Pyenv

# PATH="$PATH:$HOME/.pyenv/bin"
if pyenv --version >/dev/null 2>&1; then 
  # eval "$(pyenv init -)"
  # eval "$(pyenv virtualenv-init -)"
  _evalcache pyenv init -
  _evalcache pyenv virtualenv-init -
fi

alias rgt='run-gradle-task'
export GRADLE_TASK_PROJECT_DIR=$HOME/projects/work/android-phone
export GRADLE_RUN_TASK_INSTALLED=1
alias rgt='run-gradle-task'

setopt nocaseglob # ignore case
setopt correct
setopt auto_cd


timezsh() {
  shell=${1-$SHELL}
  for i in $(seq 1 10); do /usr/bin/time $shell -i -c exit; done
}

init() {

  [ -f ~/.functions ] && source ~/.functions
  [ -f ~/.functions-work ] && source ~/.functions-work
  [ -f ~/.exports ] && source ~/.exports
}

